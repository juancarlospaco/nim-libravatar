from strutils import toLowerAscii, strip
from md5 import getMD5


template getLibravatarUrl*(email: string, size: range[1..512] = 100, default = "robohash", forceDefault = false,
    baseUrl = (when defined(ssl): "https://seccdn.libravatar.org/avatar/" else: "http://cdn.libravatar.org/avatar/")): string =
  ## https://wiki.libravatar.org/api & https://wiki.libravatar.org/features
  ## Federation supported passing ``baseUrl``, DNS server discovery is up to you.
  ## Nim being compiled, dont need a hardcoded DNS dig at Runtime in this function,
  ## you can do it compile-time for your needs, or just pass a string URL, KISS.
  ## 404 wont return 404,but a default image,use ``default="404"`` for 404 Error.
  ## Your users nor you dont need a Libravatar account if you dont want to,
  ## because if Libravatar cant find you it redirects you to your Gravatar,
  ## if you have no Gravatar then it returns a default autogenerated image.
  assert email.len > 5, "email must not be empty string"
  assert email.len < 255, "email must be <255 characters long string"
  assert '@' in email, "email must be a valid standard email address string"
  assert baseUrl.len > 5, "baseUrl must be a valid HTTP URL string"
  (baseUrl & getMD5(email.strip.toLowerAscii) & "?s=" & $size &
    (if unlikely(default != ""): "&d=" & default else: "") &
    (when defined(release): "" else: (if unlikely(forceDefault): "&f=y" else: ""))
  )


runnableExamples:
  echo getLibravatarUrl(email = "me@aaronsw.com")
  echo getLibravatarUrl(email = "me@aaronsw.com", size = 512, default = "monsterid")


when isMainModule and defined(ssl):
  {.passL: "-s", passC: "-flto -ffast-math -march=native -mtune=native".}
  import httpclient
  from os import paramStr
  newHttpClient().downloadFile(getLibravatarUrl(paramStr(1), size = 128, default = "404"), paramStr(1) & ".jpg")
